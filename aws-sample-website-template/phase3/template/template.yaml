AWSTemplateFormatVersion: 2010-09-09
Metadata:
  'AWS::CloudFormation::Designer':
    55e241dc-eafa-43d7-84ab-e97fc94de66c:
      size:
        width: 60
        height: 60
      position:
        x: 450
        'y': 330
      z: 1
      embeds: []
    897f9dd3-81ed-43eb-9c96-ee3fef3b6551:
      size:
        width: 60
        height: 60
      position:
        x: 450
        'y': 240
      z: 1
      embeds: []
    b91da456-8cff-4b4c-8a4d-3432903afc93:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 330
      z: 1
      embeds: []
      dependson:
        - 55e241dc-eafa-43d7-84ab-e97fc94de66c
    319fbd3b-c3be-43c5-9080-cc206bd585d6:
      size:
        width: 60
        height: 60
      position:
        x: 300
        'y': 240
      z: 1
      embeds: []
      dependson:
        - 897f9dd3-81ed-43eb-9c96-ee3fef3b6551
    18b4f28e-7bae-4711-96e7-e304b3267e56:
      size:
        width: 60
        height: 60
      position:
        x: 570
        'y': 390
      z: 1
      embeds: []
    e6a787bc-8413-4fdc-9b03-5b4cde7297be:
      size:
        width: 60
        height: 60
      position:
        x: 570
        'y': 330
      z: 1
      embeds: []
    f2173edc-2c09-4acd-9f1c-8cf39210229c:
      size:
        width: 60
        height: 60
      position:
        x: 690
        'y': 300
      z: 1
      embeds: []
    cae4a1ba-aa6f-49bd-971b-93d6ab6cd703:
      size:
        width: 60
        height: 60
      position:
        x: 690
        'y': 210
      z: 1
      embeds: []
    356045d3-20ad-4f6a-8003-cfa6a75c628d:
      size:
        width: 60
        height: 60
      position:
        x: 690
        'y': 390
      z: 1
      embeds: []
      dependson:
        - f2173edc-2c09-4acd-9f1c-8cf39210229c
    5b532b22-5058-457c-8c42-6b977dca9889:
      size:
        width: 60
        height: 60
      position:
        x: 780
        'y': 210
      z: 1
      embeds: []
      dependson:
        - cae4a1ba-aa6f-49bd-971b-93d6ab6cd703
    b41001ca-a98a-4fc0-b1ca-a2886ddfb395:
      size:
        width: 60
        height: 60
      position:
        x: 940
        'y': 400
      z: 1
      embeds: []
    188bb59e-8c1f-4f4c-a3e4-49d89fb5aece:
      size:
        width: 60
        height: 60
      position:
        x: 830
        'y': 400
      z: 1
      embeds: []
    bb81d0f5-dd26-4f13-8ce0-20e41c069abd:
      size:
        width: 60
        height: 60
      position:
        x: 1040
        'y': 400
      z: 1
      embeds: []
      isassociatedwith:
        - b41001ca-a98a-4fc0-b1ca-a2886ddfb395
    2727b9d1-04f2-487f-ae75-451a2c22ea6c:
      size:
        width: 60
        height: 60
      position:
        x: 830
        'y': 300
      z: 1
      embeds: []
Resources:
  IndexLambdaVersion:
    Type: 'Custom::LatestLambdaVersion'
    Properties:
      ServiceToken: !GetAtt PublishLambdaVersion.Arn
      FunctionName: !Ref LambdaFunction
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 2727b9d1-04f2-487f-ae75-451a2c22ea6c
  cfoaizzz:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref ReactBucket
    Metadata:
      'AWS::CloudFormation::Designer':
        id: e6a787bc-8413-4fdc-9b03-5b4cde7297be
    DependsOn:
      - ReactBucket
  iamrole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - edgelambda.amazonaws.com
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: cae4a1ba-aa6f-49bd-971b-93d6ab6cd703
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    Properties:
      DistributionConfig:
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 3600
          LambdaFunctionAssociations:
            - EventType: origin-request
              LambdaFunctionARN: !Ref LambdaVersion
          ForwardedValues:
            Cookies:
              Forward: whitelist
              WhitelistedNames:
                - version
            QueryString: false
          MaxTTL: 86400
          MinTTL: 60
          TargetOriginId: s3origin
          ViewerProtocolPolicy: allow-all
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt 
              - ReactBucket
              - DomainName
            Id: s3origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${cfoaizzz}'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 18b4f28e-7bae-4711-96e7-e304b3267e56
    DependsOn:
      - ReactBucket
  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: |
        Lambda at Edge function to 
      Code:
        S3Bucket: !Ref CodeBucket
        S3Key: lambda.zip
      Handler: index.js
      MemorySize: 128
      Role: !GetAtt 
        - iamrole
        - Arn
      Runtime: nodejs12.x
    Metadata:
      'AWS::CloudFormation::Designer':
        id: f2173edc-2c09-4acd-9f1c-8cf39210229c
  LambdaVersion:
    Type: 'AWS::Lambda::Version'
    Properties:
      FunctionName: !Ref LambdaFunction
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 356045d3-20ad-4f6a-8003-cfa6a75c628d
    DependsOn:
      - LambdaFunction
  ReactBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref ReactBucketName
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
      VersioningConfiguration:
        Status: Enabled
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 55e241dc-eafa-43d7-84ab-e97fc94de66c
  ReactBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ReactBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicRead
            Effect: Allow
            Principal: '*'
            Action:
              - 's3:GetObject'
            Resource:
              - !Sub '${ReactBucket.Arn}/*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b91da456-8cff-4b4c-8a4d-3432903afc93
    DependsOn:
      - ReactBucket
  AngularBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref AngularBucketName
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
      VersioningConfiguration:
        Status: Enabled
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 897f9dd3-81ed-43eb-9c96-ee3fef3b6551
  AngularBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref AngularBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicRead
            Effect: Allow
            Principal: '*'
            Action:
              - 's3:GetObject'
            Resource:
              - !Sub '${AngularBucket.Arn}/*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 319fbd3b-c3be-43c5-9080-cc206bd585d6
    DependsOn:
      - AngularBucket
  IAMP41UKQ:
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
        - !Ref iamrole
      PolicyName: AmazonS3FullAccess
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:*'
            Resource:
              - 'arn:aws:s3:::exchange-data-raw'
              - 'arn:aws:s3:::exchange-data-raw/*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 5b532b22-5058-457c-8c42-6b977dca9889
    DependsOn:
      - iamrole
  PublishLambdaVersionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: b41001ca-a98a-4fc0-b1ca-a2886ddfb395
  PublishLambdaVersionRolePolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      Roles:
        - !Ref PublishLambdaVersionRole
      PolicyName: PublishVersion
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'lambda:PublishVersion'
            Resource: '*'
    Metadata:
      'AWS::CloudFormation::Designer':
        id: bb81d0f5-dd26-4f13-8ce0-20e41c069abd
  PublishLambdaVersion:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: index.handler
      Runtime: nodejs12.x
      Role: !GetAtt PublishLambdaVersionRole.Arn
      Code:
        ZipFile: |
          const {Lambda} = require('aws-sdk')
          const {send, SUCCESS, FAILED} = require('cfn-response')
          const lambda = new Lambda()
          exports.handler = (event, context) => {
            const {RequestType, ResourceProperties: {FunctionName}} = event
            if (RequestType == 'Delete') return send(event, context, SUCCESS)
            lambda.publishVersion({FunctionName}, (err, {FunctionArn}) => {
              err
                ? send(event, context, FAILED, err)
                : send(event, context, SUCCESS, {FunctionArn})
            })
          }
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 188bb59e-8c1f-4f4c-a3e4-49d89fb5aece
Parameters:
  ReactBucketName:
    Type: String
    Default: reactbucket
  AngularBucketName:
    Type: String
    Default: angularbucket
  CodeBucket:
    Type: String
